# When creating our dot files for the flowcharts, we have to use html
# references. This is unfortunate because our normal Markdown checks 
# will not catch these references. In this script we create a custom 
# check that will make sure all references in a dot file and associated
# svg file exist. 

import subprocess
import os 
import xml.etree.ElementTree as ET
from pathlib import Path

def grep_in_directory(directory, phrase):
    try:
        # Use subprocess to call grep
        result = subprocess.run(
            ['grep', '-rl', phrase, directory],
            capture_output=True,
            text=True,
            check=True
        )
        return result.stdout.splitlines()
    except subprocess.CalledProcessError as e:
        # If grep finds no matches, it raises an error
        if e.returncode == 1:
            return []  # No matches found
        else:
            raise  # Some other error occurred

def get_all_dot_files(directory):
    file_names_without_extension = []

    # List all entries in the specified directory
    for entry in os.listdir(directory):
        entry_path = os.path.join(directory, entry)
        # Check if it's a file (not a directory)
        if os.path.isfile(entry_path):
            # Get the file name without extension
            file_name, _ = os.path.splitext(entry)
            file_names_without_extension.append(file_name)

    return file_names_without_extension

def get_xlink_hrefs(svg_file):
    # Parse the SVG file
    tree = ET.parse(svg_file)
    root = tree.getroot()

    # Namespace dictionary for SVG
    namespaces = {
        'svg': 'http://www.w3.org/2000/svg',
        'xlink': 'http://www.w3.org/1999/xlink'
    }

    # Find all elements with 'xlink:href' attribute
    hrefs = []
    for elem in root.findall('.//*[@xlink:href]', namespaces):

        # get hrefs and replace html with md
        hrefs.append(elem.attrib['{http://www.w3.org/1999/xlink}href'].replace('html', 'md'))

    return hrefs

def check_file_exists(file_path):
    return Path(file_path).is_file()

def get_false_indices(lst):
    return [index for index, value in enumerate(lst) if not value]

if __name__ == "__main__":

    # directory to search for dot file reference 
    main_directory = "./docs"

    # directory containing dot files 
    dot_directory = "./graphviz_flowcharts/dot_files"

    # get list of all dot files in the dot_directory
    dot_file_names = get_all_dot_files(dot_directory)

    for file_name in dot_file_names:

        # svg reference to look for in docs
        svg_ref = "graphviz_flowcharts/generated_images/" + file_name + ".svg"

        xlink_hrefs = get_xlink_hrefs(svg_ref)

        # get all files in the docs that reference an svg generated by a dot file
        files_w_svg_ref = grep_in_directory(main_directory, svg_ref)

        if files_w_svg_ref:

            for file_referencing in files_w_svg_ref:

                path_exists = [check_file_exists(Path(file_referencing).parent / ref) for ref in xlink_hrefs]

                false_ind = get_false_indices(path_exists)

                nonexistent_paths = [xlink_hrefs[ind] for ind in false_ind]

                if nonexistent_paths:
                    dot_file = 'graphviz_flowcharts/generated_images/' + file_name + '.dot'
                    raise RuntimeError(f"The following hrefs in {dot_file} DO NOT EXIST: {nonexistent_paths}")